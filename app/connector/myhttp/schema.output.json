[
  {
    "name": "https://raw.githubusercontent.com/hasura/ndc-http-recipes/refs/heads/main/recipes/onesignal/schema/onesignal_v1.json",
    "settings": {
      "servers": [
        {
          "url": {
            "value": "https://onesignal.com/api/v1",
            "env": "ONESIGNAL_SERVER_URL"
          },
          "id": "app1",
          "argumentPresets": [
            {
              "path": "app_id",
              "value": {
                "type": "env",
                "name": "ONESIGNAL_APP_ID"
              },
              "targets": []
            },
            {
              "path": "body.app_id",
              "value": {
                "type": "env",
                "name": "ONESIGNAL_APP_ID"
              },
              "targets": []
            }
          ],
          "securitySchemes": {
            "app_key": {
              "type": "http",
              "header": "Authorization",
              "scheme": "bearer",
              "value": {
                "env": "ONESIGNAL_APP_KEY_TOKEN"
              }
            },
            "user_key": {
              "type": "http",
              "header": "Authorization",
              "scheme": "bearer",
              "value": {
                "env": "ONESIGNAL_USER_KEY_TOKEN"
              }
            }
          }
        },
        {
          "url": {
            "value": "https://onesignal.com/api/v1",
            "env": "ONESIGNAL_SERVER_URL"
          },
          "id": "app2",
          "argumentPresets": [
            {
              "path": "app_id",
              "value": {
                "type": "env",
                "name": "ONESIGNAL_APP_ID_2"
              },
              "targets": []
            },
            {
              "path": "body.app_id",
              "value": {
                "type": "env",
                "name": "ONESIGNAL_APP_ID_2"
              },
              "targets": []
            }
          ],
          "securitySchemes": {
            "app_key": {
              "type": "http",
              "header": "Authorization",
              "scheme": "bearer",
              "value": {
                "env": "ONESIGNAL_APP_KEY_TOKEN_2"
              }
            },
            "user_key": {
              "type": "http",
              "header": "Authorization",
              "scheme": "bearer",
              "value": {
                "env": "ONESIGNAL_USER_KEY_TOKEN_2"
              }
            }
          }
        }
      ],
      "version": "1.2.2"
    },
    "functions": {
      "fetch_aliases": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/user/identity",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Lists all Aliases for the User identified by :subscription_id.",
        "result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "fetch_aliasesDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/user/identity",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Lists all Aliases for the User identified by :subscription_id.",
        "result_type": {
          "name": "FetchAliasesDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "fetch_user": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Returns the Users properties, Aliases, and Subscriptions.",
        "result_type": {
          "name": "User",
          "type": "named"
        },
        "original_result_type": {
          "name": "User",
          "type": "named"
        }
      },
      "fetch_userDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Returns the Users properties, Aliases, and Subscriptions.",
        "result_type": {
          "name": "FetchUserDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "User",
          "type": "named"
        }
      },
      "fetch_user_identity": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Lists all Aliases for the User identified by (:alias_label, :alias_id).",
        "result_type": {
          "name": "FetchUserIdentityResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "FetchUserIdentityResult",
          "type": "named"
        }
      },
      "fetch_user_identityDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Lists all Aliases for the User identified by (:alias_label, :alias_id).",
        "result_type": {
          "name": "FetchUserIdentityDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "FetchUserIdentityResult",
          "type": "named"
        }
      },
      "get_app": {
        "request": {
          "url": "/apps/{app_id}",
          "method": "get",
          "security": [
            {
              "user_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "An app id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "View an app",
        "result_type": {
          "name": "App",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "get_appDistributed": {
        "request": {
          "url": "/apps/{app_id}",
          "method": "get",
          "security": [
            {
              "user_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "An app id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "View an app",
        "result_type": {
          "name": "GetAppDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "get_apps": {
        "request": {
          "url": "/apps",
          "method": "get",
          "security": [
            {
              "user_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "View apps",
        "result_type": {
          "element_type": {
            "name": "App",
            "type": "named"
          },
          "type": "array"
        },
        "original_result_type": {
          "element_type": {
            "name": "App",
            "type": "named"
          },
          "type": "array"
        }
      },
      "get_appsDistributed": {
        "request": {
          "url": "/apps",
          "method": "get",
          "security": [
            {
              "user_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "View apps",
        "result_type": {
          "name": "GetAppsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "element_type": {
            "name": "App",
            "type": "named"
          },
          "type": "array"
        }
      },
      "get_eligible_iams": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/iams",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Manifest of In-App Messages the Subscription is eligible to display by the SDK.",
        "result_type": {
          "name": "GetEligibleIamsResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "GetEligibleIamsResult",
          "type": "named"
        }
      },
      "get_eligible_iamsDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/iams",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Manifest of In-App Messages the Subscription is eligible to display by the SDK.",
        "result_type": {
          "name": "GetEligibleIamsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "GetEligibleIamsResult",
          "type": "named"
        }
      },
      "get_notification": {
        "request": {
          "url": "/notifications/{notification_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View notification",
        "result_type": {
          "name": "NotificationWithMeta",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationWithMeta",
          "type": "named"
        }
      },
      "get_notificationDistributed": {
        "request": {
          "url": "/notifications/{notification_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View notification",
        "result_type": {
          "name": "GetNotificationDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationWithMeta",
          "type": "named"
        }
      },
      "get_notifications": {
        "request": {
          "url": "/notifications",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to view notifications from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "kind": {
            "description": "Kind of notifications returned:   * unset - All notification types (default)   * `0` - Dashboard only   * `1` - API only   * `3` - Automated only",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "kind",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "limit": {
            "description": "How many notifications to return.  Max is 50.  Default is 50.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "offset": {
            "description": "Page offset.  Default is 0.  Results are sorted by queued_at in descending order.  queued_at is a representation of the time that the notification was queued at.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "offset",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "View notifications",
        "result_type": {
          "name": "NotificationSlice",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationSlice",
          "type": "named"
        }
      },
      "get_notificationsDistributed": {
        "request": {
          "url": "/notifications",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to view notifications from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "kind": {
            "description": "Kind of notifications returned:   * unset - All notification types (default)   * `0` - Dashboard only   * `1` - API only   * `3` - Automated only",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "kind",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "limit": {
            "description": "How many notifications to return.  Max is 50.  Default is 50.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "offset": {
            "description": "Page offset.  Default is 0.  Results are sorted by queued_at in descending order.  queued_at is a representation of the time that the notification was queued at.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "offset",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "View notifications",
        "result_type": {
          "name": "GetNotificationsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationSlice",
          "type": "named"
        }
      },
      "get_outcomes": {
        "request": {
          "url": "/apps/{app_id}/outcomes",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "outcome_attribution": {
            "description": "Optional Attribution type for the outcomes. The values can be direct or influenced or unattributed. Example: outcome_attribution=direct Default is total (returns direct+influenced+unattributed) if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_attribution",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "outcome_names": {
            "description": "Required Comma-separated list of names and the value (sum/count) for the returned outcome data. Note: Clicks only support count aggregation. For out-of-the-box OneSignal outcomes such as click and session duration, please use the \"os\" prefix with two underscores. For other outcomes, please use the name specified by the user. Example:os__session_duration.count,os__click.count,CustomOutcomeName.sum",
            "type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            },
            "http": {
              "name": "outcome_names",
              "in": "query",
              "schema": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "string"
                  ]
                }
              }
            }
          },
          "outcome_platforms": {
            "description": "Optional Platform id. Refer device's platform ids for values. Example: outcome_platform=0 for iOS outcome_platform=7,8 for Safari and Firefox Default is data from all platforms if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_platforms",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "outcome_time_range": {
            "description": "Optional Time range for the returned data. The values can be 1h (for the last 1 hour data), 1d (for the last 1 day data), or 1mo (for the last 1 month data). Default is 1h if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_time_range",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View Outcomes",
        "result_type": {
          "name": "OutcomesData",
          "type": "named"
        },
        "original_result_type": {
          "name": "OutcomesData",
          "type": "named"
        }
      },
      "get_outcomesDistributed": {
        "request": {
          "url": "/apps/{app_id}/outcomes",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "outcome_attribution": {
            "description": "Optional Attribution type for the outcomes. The values can be direct or influenced or unattributed. Example: outcome_attribution=direct Default is total (returns direct+influenced+unattributed) if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_attribution",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "outcome_names": {
            "description": "Required Comma-separated list of names and the value (sum/count) for the returned outcome data. Note: Clicks only support count aggregation. For out-of-the-box OneSignal outcomes such as click and session duration, please use the \"os\" prefix with two underscores. For other outcomes, please use the name specified by the user. Example:os__session_duration.count,os__click.count,CustomOutcomeName.sum",
            "type": {
              "element_type": {
                "name": "String",
                "type": "named"
              },
              "type": "array"
            },
            "http": {
              "name": "outcome_names",
              "in": "query",
              "schema": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "string"
                  ]
                }
              }
            }
          },
          "outcome_platforms": {
            "description": "Optional Platform id. Refer device's platform ids for values. Example: outcome_platform=0 for iOS outcome_platform=7,8 for Safari and Firefox Default is data from all platforms if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_platforms",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "outcome_time_range": {
            "description": "Optional Time range for the returned data. The values can be 1h (for the last 1 hour data), 1d (for the last 1 day data), or 1mo (for the last 1 month data). Default is 1h if the parameter is omitted.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "outcome_time_range",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View Outcomes",
        "result_type": {
          "name": "GetOutcomesDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "OutcomesData",
          "type": "named"
        }
      },
      "get_player": {
        "request": {
          "url": "/players/{player_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "Your app_id for this device",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "email_auth_hash": {
            "description": "Email - Only required if you have enabled Identity Verification and device_type is email (11).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "email_auth_hash",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "Player's OneSignal ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View device",
        "result_type": {
          "name": "Player",
          "type": "named"
        },
        "original_result_type": {
          "name": "Player",
          "type": "named"
        }
      },
      "get_playerDistributed": {
        "request": {
          "url": "/players/{player_id}",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "Your app_id for this device",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "email_auth_hash": {
            "description": "Email - Only required if you have enabled Identity Verification and device_type is email (11).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "name": "email_auth_hash",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "Player's OneSignal ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "View device",
        "result_type": {
          "name": "GetPlayerDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "Player",
          "type": "named"
        }
      },
      "get_players": {
        "request": {
          "url": "/players",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to view players from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "limit": {
            "description": "How many devices to return. Max is 300. Default is 300",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "offset": {
            "description": "Result offset. Default is 0. Results are sorted by id;",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "offset",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "View devices",
        "result_type": {
          "name": "PlayerSlice",
          "type": "named"
        },
        "original_result_type": {
          "name": "PlayerSlice",
          "type": "named"
        }
      },
      "get_playersDistributed": {
        "request": {
          "url": "/players",
          "method": "get",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to view players from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "limit": {
            "description": "How many devices to return. Max is 300. Default is 300",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "offset": {
            "description": "Result offset. Default is 0. Results are sorted by id;",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "offset",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "View devices",
        "result_type": {
          "name": "GetPlayersDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "PlayerSlice",
          "type": "named"
        }
      }
    },
    "object_types": {
      "App": {
        "fields": {
          "apns_bundle_id": {
            "description": "iOS: Required if using p8. Bundle ID for your app in the Apple ecosystem.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_certificates": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_env": {
            "description": "iOS: Either sandbox or production",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "AppApnsEnv",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_key_id": {
            "description": "iOS: Required if using p8. Unique identifier for the p8 authentication key.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_p8": {
            "description": "iOS: Required if using p8. Base64 encoded p8 key",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_team_id": {
            "description": "iOS: Required if using p8. Team ID generated by Apple for your developer account.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "basic_auth_key": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_key": {
            "description": "Not for web push.  Your Google Push Messaging Auth Key if you use Chrome Apps / Extensions.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_default_notification_icon": {
            "description": "Chrome (All Browsers except Safari): Your default notification icon. Should be 256x256 pixels, min 80x80.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_origin": {
            "description": "Chrome (All Browsers except Safari) (Recommended): The URL to your website.  This field is required if you wish to enable web push and specify other web push parameters.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_sub_domain": {
            "description": "Chrome (All Browsers except Safari): A subdomain of your choice in order to support Web Push on non-HTTPS websites. This field must be set in order for the chrome_web_gcm_sender_id property to be processed.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "created_at": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "TimestampTZ",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          },
          "gcm_key": {
            "description": "Android: Your Google Push Messaging Auth Key",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "messageable_players": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "name": {
            "description": "The name of your app, as displayed on your apps list on the dashboard.  This can be renamed.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "players": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "safari_apns_certificates": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_128_128": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_16_16": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_256_256": {
            "description": "Safari: A url for a 256x256 png notification icon. This is the only Safari icon URL you need to provide.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_32_32": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_64_64": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_push_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_site_origin": {
            "description": "Safari (Recommended): The hostname to your website including http(s)://",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "site_name": {
            "description": "All Browsers (Recommended): The Site Name. Requires both chrome_web_origin and safari_site_origin to be set to add or update it.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "updated_at": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "TimestampTZ",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          }
        }
      },
      "AppInput": {
        "fields": {
          "additional_data_is_root_payload": {
            "description": "iOS: Notification data (additional data) values will be added to the root of the apns payload when sent to the device.  Ignore if you're not using any other plugins, or not using OneSignal SDK methods to read the payload.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "android_gcm_sender_id": {
            "description": "Android: Your Google Project number.  Also known as Sender ID.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_bundle_id": {
            "description": "iOS: Required if using p8. Bundle ID for your app in the Apple ecosystem.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_env": {
            "description": "iOS: Either sandbox or production",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "AppApnsEnv",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_key_id": {
            "description": "iOS: Required if using p8. Unique identifier for the p8 authentication key.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_p12": {
            "description": "iOS: Your apple push notification p12 certificate file, converted to a string and Base64 encoded.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_p12_password": {
            "description": "iOS: Required if using p12 certificate.  Password for the apns_p12 file.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_p8": {
            "description": "iOS: Required if using p8. Base64 encoded p8 key",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "apns_team_id": {
            "description": "iOS: Required if using p8. Team ID generated by Apple for your developer account.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_key": {
            "description": "Not for web push.  Your Google Push Messaging Auth Key if you use Chrome Apps / Extensions.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_default_notification_icon": {
            "description": "Chrome (All Browsers except Safari): Your default notification icon. Should be 256x256 pixels, min 80x80.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_origin": {
            "description": "Chrome (All Browsers except Safari) (Recommended): The URL to your website.  This field is required if you wish to enable web push and specify other web push parameters.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_sub_domain": {
            "description": "Chrome (All Browsers except Safari): A subdomain of your choice in order to support Web Push on non-HTTPS websites. This field must be set in order for the chrome_web_gcm_sender_id property to be processed.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "gcm_key": {
            "description": "Android: Your Google Push Messaging Auth Key",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "name": {
            "description": "The name of your app, as displayed on your apps list on the dashboard.  This can be renamed.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "organization_id": {
            "description": "The Id of the Organization you would like to add this app to.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_apns_p12": {
            "description": "Safari: Your apple push notification p12 certificate file for Safari Push Notifications, converted to a string and Base64 encoded.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_apns_p12_password": {
            "description": "Safari: Password for safari_apns_p12 file",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_icon_256_256": {
            "description": "Safari: A url for a 256x256 png notification icon. This is the only Safari icon URL you need to provide.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "safari_site_origin": {
            "description": "Safari (Recommended): The hostname to your website including http(s)://",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "site_name": {
            "description": "All Browsers (Recommended): The Site Name. Requires both chrome_web_origin and safari_site_origin to be set to add or update it.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "BasicNotification1AndroidBackgroundLayoutInput": {
        "description": "Channel: Push Notifications Platform: Android Allowing setting a background image for the notification. This is a JSON object containing the following keys. See our Background Image documentation for image sizes.",
        "fields": {
          "contents_color": {
            "description": "Body text color ARGB Hex format. Example(Red) \"FFFF0000\".",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "headings_color": {
            "description": "Title text color ARGB Hex format. Example(Blue) \"FF0000FF\".",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "image": {
            "description": "Asset file, android resource name, or URL to remote image.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "BeginLiveActivityDistributedResult": {
        "description": "Distributed responses of begin_live_activityDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of begin_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of begin_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "BeginLiveActivityDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "BeginLiveActivityDistributedResultData": {
        "description": "Distributed response data of begin_live_activityDistributed",
        "fields": {
          "data": {
            "description": "A result of begin_live_activityDistributed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "BeginLiveActivityRequestInput": {
        "fields": {
          "push_token": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "ButtonInput": {
        "fields": {
          "icon": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "text": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "CancelNotificationDistributedResult": {
        "description": "Distributed responses of cancel_notificationDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of cancel_notificationDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of cancel_notificationDistributed",
            "type": {
              "element_type": {
                "name": "CancelNotificationDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CancelNotificationDistributedResultData": {
        "description": "Distributed response data of cancel_notificationDistributed",
        "fields": {
          "data": {
            "description": "A result of cancel_notificationDistributed",
            "type": {
              "name": "CancelNotificationSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CancelNotificationSuccessResponse": {
        "fields": {
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "CreateAppDistributedResult": {
        "description": "Distributed responses of create_appDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_appDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_appDistributed",
            "type": {
              "element_type": {
                "name": "CreateAppDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreateAppDistributedResultData": {
        "description": "Distributed response data of create_appDistributed",
        "fields": {
          "data": {
            "description": "A result of create_appDistributed",
            "type": {
              "name": "App",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CreateNotificationDistributedResult": {
        "description": "Distributed responses of create_notificationDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_notificationDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_notificationDistributed",
            "type": {
              "element_type": {
                "name": "CreateNotificationDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreateNotificationDistributedResultData": {
        "description": "Distributed response data of create_notificationDistributed",
        "fields": {
          "data": {
            "description": "A result of create_notificationDistributed",
            "type": {
              "name": "CreateNotificationSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CreateNotificationSuccessResponse": {
        "fields": {
          "errors": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Notification200Errors",
                "type": "named"
              }
            },
            "http": {
              "xml": {
                "name": "Notification200Errors"
              }
            }
          },
          "external_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "recipients": {
            "description": "Estimated number of subscribers targetted by notification.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "CreatePlayerDistributedResult": {
        "description": "Distributed responses of create_playerDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_playerDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_playerDistributed",
            "type": {
              "element_type": {
                "name": "CreatePlayerDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreatePlayerDistributedResultData": {
        "description": "Distributed response data of create_playerDistributed",
        "fields": {
          "data": {
            "description": "A result of create_playerDistributed",
            "type": {
              "name": "CreatePlayerSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CreatePlayerSuccessResponse": {
        "fields": {
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "CreateSegmentSuccessResponse": {
        "fields": {
          "id": {
            "description": "UUID of created segment",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "CreateSegmentsDistributedResult": {
        "description": "Distributed responses of create_segmentsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_segmentsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_segmentsDistributed",
            "type": {
              "element_type": {
                "name": "CreateSegmentsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreateSegmentsDistributedResultData": {
        "description": "Distributed response data of create_segmentsDistributed",
        "fields": {
          "data": {
            "description": "A result of create_segmentsDistributed",
            "type": {
              "name": "CreateSegmentSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CreateSubscriptionDistributedResult": {
        "description": "Distributed responses of create_subscriptionDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "CreateSubscriptionDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreateSubscriptionDistributedResultData": {
        "description": "Distributed response data of create_subscriptionDistributed",
        "fields": {
          "data": {
            "description": "A result of create_subscriptionDistributed",
            "type": {
              "name": "CreateSubscriptionResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "CreateSubscriptionRequestBodyInput": {
        "fields": {
          "retain_previous_owner": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "subscription": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SubscriptionObjectInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "SubscriptionObject"
              }
            }
          }
        }
      },
      "CreateSubscriptionResult": {
        "fields": {
          "subscription": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SubscriptionObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "SubscriptionObject"
              }
            }
          }
        }
      },
      "CreateUserDistributedResult": {
        "description": "Distributed responses of create_userDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of create_userDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of create_userDistributed",
            "type": {
              "element_type": {
                "name": "CreateUserDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "CreateUserDistributedResultData": {
        "description": "Distributed response data of create_userDistributed",
        "fields": {
          "data": {
            "description": "A result of create_userDistributed",
            "type": {
              "name": "User",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeleteAliasDistributedResult": {
        "description": "Distributed responses of delete_aliasDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of delete_aliasDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of delete_aliasDistributed",
            "type": {
              "element_type": {
                "name": "DeleteAliasDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "DeleteAliasDistributedResultData": {
        "description": "Distributed response data of delete_aliasDistributed",
        "fields": {
          "data": {
            "description": "A result of delete_aliasDistributed",
            "type": {
              "name": "DeleteAliasResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeleteAliasResult": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "DeletePlayerDistributedResult": {
        "description": "Distributed responses of delete_playerDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of delete_playerDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of delete_playerDistributed",
            "type": {
              "element_type": {
                "name": "DeletePlayerDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "DeletePlayerDistributedResultData": {
        "description": "Distributed response data of delete_playerDistributed",
        "fields": {
          "data": {
            "description": "A result of delete_playerDistributed",
            "type": {
              "name": "DeletePlayerSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeletePlayerSuccessResponse": {
        "fields": {
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "DeleteSegmentSuccessResponse": {
        "fields": {
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "DeleteSegmentsDistributedResult": {
        "description": "Distributed responses of delete_segmentsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of delete_segmentsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of delete_segmentsDistributed",
            "type": {
              "element_type": {
                "name": "DeleteSegmentsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "DeleteSegmentsDistributedResultData": {
        "description": "Distributed response data of delete_segmentsDistributed",
        "fields": {
          "data": {
            "description": "A result of delete_segmentsDistributed",
            "type": {
              "name": "DeleteSegmentSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeleteSubscriptionDistributedResult": {
        "description": "Distributed responses of delete_subscriptionDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of delete_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of delete_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "DeleteSubscriptionDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "DeleteSubscriptionDistributedResultData": {
        "description": "Distributed response data of delete_subscriptionDistributed",
        "fields": {
          "data": {
            "description": "A result of delete_subscriptionDistributed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeleteUserDistributedResult": {
        "description": "Distributed responses of delete_userDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of delete_userDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of delete_userDistributed",
            "type": {
              "element_type": {
                "name": "DeleteUserDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "DeleteUserDistributedResultData": {
        "description": "Distributed response data of delete_userDistributed",
        "fields": {
          "data": {
            "description": "A result of delete_userDistributed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "DeliveryData": {
        "fields": {
          "converted": {
            "description": "Number of messages that were clicked.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "errored": {
            "description": "Number of errors reported.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "failed": {
            "description": "Number of messages sent to unsubscribed devices.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "received": {
            "description": "Number of devices that received the message.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "successful": {
            "description": "Number of messages delivered to push servers, mobile carriers, or email service providers.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "DistributedError": {
        "description": "The error response of the remote request",
        "fields": {
          "details": {
            "description": "Any additional structured information about the error",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "message": {
            "description": "An optional human-readable summary of the error",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "EndLiveActivityDistributedResult": {
        "description": "Distributed responses of end_live_activityDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of end_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of end_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "EndLiveActivityDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "EndLiveActivityDistributedResultData": {
        "description": "Distributed response data of end_live_activityDistributed",
        "fields": {
          "data": {
            "description": "A result of end_live_activityDistributed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "ExportEventsDistributedResult": {
        "description": "Distributed responses of export_eventsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of export_eventsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of export_eventsDistributed",
            "type": {
              "element_type": {
                "name": "ExportEventsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "ExportEventsDistributedResultData": {
        "description": "Distributed response data of export_eventsDistributed",
        "fields": {
          "data": {
            "description": "A result of export_eventsDistributed",
            "type": {
              "name": "ExportEventsSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "ExportEventsSuccessResponse": {
        "fields": {
          "csv_file_url": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "ExportPlayersBodyInput": {
        "fields": {
          "extra_fields": {
            "description": "Additional fields that you wish to include. Currently supports location, country, rooted, notification_types, ip, external_user_id, web_auth, and web_p256.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "last_active_since": {
            "description": "Export all devices with a last_active timestamp greater than this time.  Unixtime in seconds.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "segment_name": {
            "description": "Export all devices belonging to the segment.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "ExportPlayersDistributedResult": {
        "description": "Distributed responses of export_playersDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of export_playersDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of export_playersDistributed",
            "type": {
              "element_type": {
                "name": "ExportPlayersDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "ExportPlayersDistributedResultData": {
        "description": "Distributed response data of export_playersDistributed",
        "fields": {
          "data": {
            "description": "A result of export_playersDistributed",
            "type": {
              "name": "ExportPlayersSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "ExportPlayersSuccessResponse": {
        "fields": {
          "csv_file_url": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "FetchAliasesDistributedResult": {
        "description": "Distributed responses of fetch_aliasesDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of fetch_aliasesDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of fetch_aliasesDistributed",
            "type": {
              "element_type": {
                "name": "FetchAliasesDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "FetchAliasesDistributedResultData": {
        "description": "Distributed response data of fetch_aliasesDistributed",
        "fields": {
          "data": {
            "description": "A result of fetch_aliasesDistributed",
            "type": {
              "name": "UserIdentityResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "FetchUserDistributedResult": {
        "description": "Distributed responses of fetch_userDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of fetch_userDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of fetch_userDistributed",
            "type": {
              "element_type": {
                "name": "FetchUserDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "FetchUserDistributedResultData": {
        "description": "Distributed response data of fetch_userDistributed",
        "fields": {
          "data": {
            "description": "A result of fetch_userDistributed",
            "type": {
              "name": "User",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "FetchUserIdentityDistributedResult": {
        "description": "Distributed responses of fetch_user_identityDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of fetch_user_identityDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of fetch_user_identityDistributed",
            "type": {
              "element_type": {
                "name": "FetchUserIdentityDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "FetchUserIdentityDistributedResultData": {
        "description": "Distributed response data of fetch_user_identityDistributed",
        "fields": {
          "data": {
            "description": "A result of fetch_user_identityDistributed",
            "type": {
              "name": "FetchUserIdentityResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "FetchUserIdentityResult": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "Filter": {
        "fields": {
          "field": {
            "description": "Name of the field to use as the first operand in the filter expression.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "key": {
            "description": "If `field` is `tag`, this field is *required* to specify `key` inside the tags.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "relation": {
            "description": "Operator of a filter expression.",
            "type": {
              "name": "FilterRelation",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "value": {
            "description": "Constant value to use as the second operand in the filter expression. This value is *required* when the relation operator is a binary operator.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "FilterExpressionsInput": {
        "fields": {
          "field": {
            "description": "Name of the field to use as the first operand in the filter expression.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "key": {
            "description": "If `field` is `tag`, this field is *required* to specify `key` inside the tags.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "operator": {
            "description": "Strictly, this must be either `\"OR\"`, or `\"AND\"`.  It can be used to compose Filters as part of a Filters object.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "OperatorOperator",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "relation": {
            "description": "Operator of a filter expression.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "FilterRelation",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "value": {
            "description": "Constant value to use as the second operand in the filter expression. This value is *required* when the relation operator is a binary operator.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "FilterInput": {
        "fields": {
          "field": {
            "description": "Name of the field to use as the first operand in the filter expression.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "key": {
            "description": "If `field` is `tag`, this field is *required* to specify `key` inside the tags.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "relation": {
            "description": "Operator of a filter expression.",
            "type": {
              "name": "FilterRelation",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "value": {
            "description": "Constant value to use as the second operand in the filter expression. This value is *required* when the relation operator is a binary operator.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "GetAppDistributedResult": {
        "description": "Distributed responses of get_appDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_appDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_appDistributed",
            "type": {
              "element_type": {
                "name": "GetAppDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetAppDistributedResultData": {
        "description": "Distributed response data of get_appDistributed",
        "fields": {
          "data": {
            "description": "A result of get_appDistributed",
            "type": {
              "name": "App",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetAppsDistributedResult": {
        "description": "Distributed responses of get_appsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_appsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_appsDistributed",
            "type": {
              "element_type": {
                "name": "GetAppsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetAppsDistributedResultData": {
        "description": "Distributed response data of get_appsDistributed",
        "fields": {
          "data": {
            "description": "A result of get_appsDistributed",
            "type": {
              "element_type": {
                "name": "App",
                "type": "named"
              },
              "type": "array"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetEligibleIamsDistributedResult": {
        "description": "Distributed responses of get_eligible_iamsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_eligible_iamsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_eligible_iamsDistributed",
            "type": {
              "element_type": {
                "name": "GetEligibleIamsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetEligibleIamsDistributedResultData": {
        "description": "Distributed response data of get_eligible_iamsDistributed",
        "fields": {
          "data": {
            "description": "A result of get_eligible_iamsDistributed",
            "type": {
              "name": "GetEligibleIamsResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetEligibleIamsResult": {
        "fields": {
          "in_app_messages": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "JSON",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          }
        }
      },
      "GetNotificationDistributedResult": {
        "description": "Distributed responses of get_notificationDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_notificationDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_notificationDistributed",
            "type": {
              "element_type": {
                "name": "GetNotificationDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetNotificationDistributedResultData": {
        "description": "Distributed response data of get_notificationDistributed",
        "fields": {
          "data": {
            "description": "A result of get_notificationDistributed",
            "type": {
              "name": "NotificationWithMeta",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetNotificationHistoryBodyInput": {
        "fields": {
          "app_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email": {
            "description": "The email address you would like the report sent.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "events": {
            "description": "\"sent\" - All the devices by player_id that were sent the specified notification_id.  Notifications targeting under 1000 recipients will not have \"sent\" events recorded, but will show \"clicked\" events. \"clicked\" - All the devices by `player_id` that clicked the specified notification_id.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "GetNotificationHistoryBodyEvents",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "GetNotificationHistoryDistributedResult": {
        "description": "Distributed responses of get_notification_historyDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_notification_historyDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_notification_historyDistributed",
            "type": {
              "element_type": {
                "name": "GetNotificationHistoryDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetNotificationHistoryDistributedResultData": {
        "description": "Distributed response data of get_notification_historyDistributed",
        "fields": {
          "data": {
            "description": "A result of get_notification_historyDistributed",
            "type": {
              "name": "NotificationHistorySuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetNotificationsDistributedResult": {
        "description": "Distributed responses of get_notificationsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_notificationsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_notificationsDistributed",
            "type": {
              "element_type": {
                "name": "GetNotificationsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetNotificationsDistributedResultData": {
        "description": "Distributed response data of get_notificationsDistributed",
        "fields": {
          "data": {
            "description": "A result of get_notificationsDistributed",
            "type": {
              "name": "NotificationSlice",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetOutcomesDistributedResult": {
        "description": "Distributed responses of get_outcomesDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_outcomesDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_outcomesDistributed",
            "type": {
              "element_type": {
                "name": "GetOutcomesDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetOutcomesDistributedResultData": {
        "description": "Distributed response data of get_outcomesDistributed",
        "fields": {
          "data": {
            "description": "A result of get_outcomesDistributed",
            "type": {
              "name": "OutcomesData",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetPlayerDistributedResult": {
        "description": "Distributed responses of get_playerDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_playerDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_playerDistributed",
            "type": {
              "element_type": {
                "name": "GetPlayerDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetPlayerDistributedResultData": {
        "description": "Distributed response data of get_playerDistributed",
        "fields": {
          "data": {
            "description": "A result of get_playerDistributed",
            "type": {
              "name": "Player",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "GetPlayersDistributedResult": {
        "description": "Distributed responses of get_playersDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of get_playersDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of get_playersDistributed",
            "type": {
              "element_type": {
                "name": "GetPlayersDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetPlayersDistributedResultData": {
        "description": "Distributed response data of get_playersDistributed",
        "fields": {
          "data": {
            "description": "A result of get_playersDistributed",
            "type": {
              "name": "PlayerSlice",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "HttpDistributedOptions": {
        "description": "Distributed execution options for HTTP requests to multiple servers",
        "fields": {
          "parallel": {
            "description": "Execute requests to remote servers in parallel",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            }
          },
          "servers": {
            "description": "Specify remote servers to receive the request",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "HttpServerId",
                  "type": "named"
                },
                "type": "array"
              }
            }
          }
        }
      },
      "HttpSingleOptions": {
        "description": "Execution options for HTTP requests to a single server",
        "fields": {
          "servers": {
            "description": "Specify remote servers to receive the request. If there are many server IDs the server is selected randomly",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "HttpServerId",
                  "type": "named"
                },
                "type": "array"
              }
            }
          }
        }
      },
      "IdentifyUserByAliasDistributedResult": {
        "description": "Distributed responses of identify_user_by_aliasDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of identify_user_by_aliasDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of identify_user_by_aliasDistributed",
            "type": {
              "element_type": {
                "name": "IdentifyUserByAliasDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "IdentifyUserByAliasDistributedResultData": {
        "description": "Distributed response data of identify_user_by_aliasDistributed",
        "fields": {
          "data": {
            "description": "A result of identify_user_by_aliasDistributed",
            "type": {
              "name": "IdentifyUserByAliasResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "IdentifyUserByAliasResult": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "IdentifyUserBySubscriptionIdDistributedResult": {
        "description": "Distributed responses of identify_user_by_subscription_idDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of identify_user_by_subscription_idDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of identify_user_by_subscription_idDistributed",
            "type": {
              "element_type": {
                "name": "IdentifyUserBySubscriptionIdDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "IdentifyUserBySubscriptionIdDistributedResultData": {
        "description": "Distributed response data of identify_user_by_subscription_idDistributed",
        "fields": {
          "data": {
            "description": "A result of identify_user_by_subscription_idDistributed",
            "type": {
              "name": "UserIdentityResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "NotificationHistorySuccessResponse": {
        "fields": {
          "destination_url": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "NotificationInput": {
        "fields": {
          "adm_big_picture": {
            "description": "Channel: Push Notifications Platform: Amazon Picture to display in the expanded view. Can be a drawable resource name or a URL.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "adm_group": {
            "description": "Channel: Push Notifications Platform: Amazon Notifications with the same group will be stacked together using Android's Notification Grouping feature.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "adm_group_message": {
            "description": "Channel: Push Notifications Platform: Amazon Summary message to display when 2+ notifications are stacked together. Default is \"# new messages\". Include $[notif_count] in your message and it will be replaced with the current number. \"en\" (English) is required. The key of each hash is either a a 2 character language code or one of zh-Hans/zh-Hant for Simplified or Traditional Chinese. The value of each key is the message that will be sent to users for that language. Example: {\"en\": \"You have $[notif_count] new messages\"}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "adm_large_icon": {
            "description": "Channel: Push Notifications Platform: Amazon If blank the small_icon is used. Can be a drawable resource name or a URL. See: How to create large icons",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "adm_small_icon": {
            "description": "Channel: Push Notifications Platform: Amazon If not set a bell icon will be used or ic_stat_onesignal_default if you have set this resource name. See: How to create small icons",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "adm_sound": {
            "description": "Channel: Push Notifications Platform: Amazon &#9888;&#65039;Deprecated, this field doesn't work on Android 8 (Oreo) and newer devices! Please use Notification Categories / Channels noted above instead to support ALL versions of Android. Sound file that is included in your app to play instead of the default device notification sound. Pass nil to disable sound for the notification. NOTE: Leave off file extension for Android. Example: \"notification\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_accent_color": {
            "description": "Channel: Push Notifications Platform: Android Sets the background color of the notification circle to the left of the notification text. Only applies to apps targeting Android API level 21+ on Android 5.0+ devices. Example(Red): \"FFFF0000\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_background_layout": {
            "description": "Channel: Push Notifications Platform: Android Allowing setting a background image for the notification. This is a JSON object containing the following keys. See our Background Image documentation for image sizes.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "BasicNotification1AndroidBackgroundLayoutInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "android_channel_id": {
            "description": "Channel: Push Notifications Platform: Android The Android Oreo Notification Category to send the notification under. See the Category documentation on creating one and getting it's id.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_group": {
            "description": "Channel: Push Notifications Platform: Android Notifications with the same group will be stacked together using Android's Notification Grouping feature.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_group_message": {
            "description": "Channel: Push Notifications Platform: Android Note: This only works for Android 6 and older. Android 7+ allows full expansion of all message. Summary message to display when 2+ notifications are stacked together. Default is \"# new messages\". Include $[notif_count] in your message and it will be replaced with the current number. Languages - The value of each key is the message that will be sent to users for that language. \"en\" (English) is required. The key of each hash is either a a 2 character language code or one of zh-Hans/zh-Hant for Simplified or Traditional Chinese. Read more: supported languages. Example: {\"en\": \"You have $[notif_count] new messages\"}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_led_color": {
            "description": "Channel: Push Notifications Platform: Android &#9888;&#65039;Deprecated, this field doesn't work on Android 8 (Oreo) and newer devices! Please use Notification Categories / Channels noted above instead to support ALL versions of Android. Sets the devices LED notification light if the device has one. ARGB Hex format. Example(Blue): \"FF0000FF\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_sound": {
            "description": "Channel: Push Notifications Platform: Android &#9888;&#65039;Deprecated, this field doesn't work on Android 8 (Oreo) and newer devices! Please use Notification Categories / Channels noted above instead to support ALL versions of Android. Sound file that is included in your app to play instead of the default device notification sound. Pass nil to disable sound for the notification. NOTE: Leave off file extension for Android. Example: \"notification\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "android_visibility": {
            "description": "Channel: Push Notifications Platform: Android 5.0_ &#9888;&#65039;Deprecated, this field doesn't work on Android 8 (Oreo) and newer devices! Please use Notification Categories / Channels noted above instead to support ALL versions of Android. 1 = Public (default) (Shows the full message on the lock screen unless the user has disabled all notifications from showing on the lock screen. Please consider the user and mark private if the contents are.) 0 = Private (Hides message contents on lock screen if the user set \"Hide sensitive notification content\" in the system settings) -1 = Secret (Notification does not show on the lock screen at all)",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "apns_alert": {
            "description": "Channel: Push Notifications Platform: iOS 10+ iOS can localize push notification messages on the client using special parameters such as loc-key. When using the Create Notification endpoint, you must include these parameters inside of a field called apns_alert. Please see Apple's guide on localizing push notifications to learn more.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "apns_push_type_override": {
            "description": "Channel: Push Notifications Platform: iOS valid values: voip Set the value to voip for sending VoIP Notifications This field maps to the APNS header apns-push-type. Note: alert and background are automatically set by OneSignal",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "app_id": {
            "description": "Required: Your OneSignal Application ID, which can be found in Keys & IDs. It is a UUID and looks similar to 8250eaf6-1a58-489e-b136-7c74a864b434.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "app_url": {
            "description": "Channel: Push Notifications Platform: All Browsers Same as url but only sent to web push platforms. Including iOS, Android, macOS, Windows, ChromeApps, etc. Example: https://onesignal.com",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "big_picture": {
            "description": "Channel: Push Notifications Platform: Android Picture to display in the expanded view. Can be a drawable resource name or a URL.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "buttons": {
            "description": "Channel: Push Notifications Platform: iOS 8.0+, Android 4.1+, and derivatives like Amazon Buttons to add to the notification. Icon only works for Android. Buttons show in reverse order of array position i.e. Last item in array shows as first button on device. Example: [{\"id\": \"id2\", \"text\": \"second button\", \"icon\": \"ic_menu_share\"}, {\"id\": \"id1\", \"text\": \"first button\", \"icon\": \"ic_menu_send\"}]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "ButtonInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "channel_for_external_user_ids": {
            "description": "Indicates if the message type when targeting with include_external_user_ids for cases where an email, sms, and/or push subscribers have the same external user id. Example: Use the string \"push\" to indicate you are sending a push notification or the string \"email\"for sending emails or \"sms\"for sending SMS.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_big_picture": {
            "description": "Channel: Push Notifications Platform: ChromeApp Large picture to display below the notification text. Must be a local URL.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_icon": {
            "description": "Channel: Push Notifications Platform: ChromeApp This flag is not used for web push For web push, please see chrome_web_icon instead. The local URL to an icon to use. If blank, the app icon will be used.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_badge": {
            "description": "Channel: Push Notifications Platform: Chrome Sets the web push notification icon for Android devices in the notification shade. Please see Web Push Notification Badge.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_icon": {
            "description": "Channel: Push Notifications Platform: Chrome Sets the web push notification's icon. An image URL linking to a valid image. Common image types are supported; GIF will not animate. We recommend 256x256 (at least 80x80) to display well on high DPI devices. Firefox will also use this icon, unless you specify firefox_icon.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_image": {
            "description": "Channel: Push Notifications Platform: Chrome 56+ Sets the web push notification's large image to be shown below the notification's title and text. Please see Web Push Notification Icons.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "collapse_id": {
            "description": "Channel: Push Notifications Platform: iOS 10+, Android Only one notification with the same id will be shown on the device. Use the same id to update an existing notification instead of showing a new one. Limit of 64 characters.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "content_available": {
            "description": "Channel: Push Notifications Platform: iOS Sending true wakes your app from background to run custom native code (Apple interprets this as content-available=1). Note: Not applicable if the app is in the \"force-quit\" state (i.e app was swiped away). Omit the contents field to prevent displaying a visible notification.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "contents": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMapInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "custom_data": {
            "description": "Channel: All JSON object that can be used as a source of message personalization data for fields that support tag variable substitution. Push, SMS: Can accept up to 2048 bytes of valid JSON. Email: Can accept up to 10000 bytes of valid JSON. Example: {\"order_id\": 123, \"currency\": \"USD\", \"amount\": 25}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "data": {
            "description": "Channel: Push Notifications Platform: Huawei A custom map of data that is passed back to your app. Same as using Additional Data within the dashboard. Can use up to 2048 bytes of data. Example: {\"abc\": 123, \"foo\": \"bar\", \"event_performed\": true, \"amount\": 12.1}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "delayed_option": {
            "description": "Channel: All Possible values are: timezone (Deliver at a specific time-of-day in each users own timezone) last-active Same as Intelligent Delivery . (Deliver at the same time of day as each user last used your app). If send_after is used, this takes effect after the send_after time has elapsed.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "delivery_time_of_day": {
            "description": "Channel: All Use with delayed_option=timezone. Examples: \"9:00AM\" \"21:45\" \"9:45:30\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email_body": {
            "description": "Channel: Email Required unless template_id is set. HTML suported The body of the email you wish to send. Typically, customers include their own HTML templates here. Must include [unsubscribe_url] in an  tag somewhere in the email. Note: any malformed HTML content will be sent to users. Please double-check your HTML is valid.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email_from_address": {
            "description": "Channel: Email The email address the email is from. If not specified, will default to \"from email\" set in the OneSignal Dashboard Email Settings.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email_from_name": {
            "description": "Channel: Email The name the email is from. If not specified, will default to \"from name\" set in the OneSignal Dashboard Email Settings.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email_preheader": {
            "description": "Channel: Email The preheader text of the email. Preheader is the preview text displayed immediately after an email subject that provides additional context about the email content. If not specified, will default to null.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email_subject": {
            "description": "Channel: Email Required.  The subject of the email.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "excluded_segments": {
            "description": "Segment that will be excluded when sending. Users in these segments will not receive a notification, even if they were included in included_segments. This targeting parameter is only compatible with included_segments. Example: [\"Active Users\", \"Inactive Users\"]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "existing_android_channel_id": {
            "description": "Channel: Push Notifications Platform: Android Use this if you have client side Android Oreo Channels you have already defined in your app with code.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "external_id": {
            "description": "Correlation and idempotency key. A request received with this parameter will first look for another notification with the same external_id. If one exists, a notification will not be sent, and result of the previous operation will instead be returned. Therefore, if you plan on using this feature, it's important to use a good source of randomness to generate the UUID passed here. This key is only idempotent for 30 days. After 30 days, the notification could be removed from our system and a notification with the same external_id will be sent again.   See Idempotent Notification Requests for more details writeOnly: true",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "filters": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "FilterInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "firefox_icon": {
            "description": "Channel: Push Notifications Platform: Firefox Not recommended Few people need to set Firefox-specific icons. We recommend setting chrome_web_icon instead, which Firefox will also use. Sets the web push notification's icon for Firefox. An image URL linking to a valid image. Common image types are supported; GIF will not animate. We recommend 256x256 (at least 80x80) to display well on high DPI devices.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "headings": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMapInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "huawei_accent_color": {
            "description": "Channel: Push Notifications Platform: Huawei Accent Color used on Action Buttons and Group overflow count. Uses RGB Hex value (E.g. #9900FF). Defaults to device's theme color if not set.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_big_picture": {
            "description": "Channel: Push Notifications Platform: Huawei Picture to display in the expanded view. Can be a drawable resource name or a URL.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_channel_id": {
            "description": "Channel: Push Notifications Platform: Huawei The Android Oreo Notification Category to send the notification under. See the Category documentation on creating one and getting it's id.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_existing_channel_id": {
            "description": "Channel: Push Notifications Platform: Huawei Use this if you have client side Android Oreo Channels you have already defined in your app with code.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_large_icon": {
            "description": "Channel: Push Notifications Platform: Huawei Can be a drawable resource name or a URL. See: How to create large icons",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_led_color": {
            "description": "Channel: Push Notifications Platform: Huawei &#9888;&#65039;Deprecated, this field ONLY works on EMUI 5 (Android 7 based) and older devices. Please also set Notification Categories / Channels noted above to support EMUI 8 (Android 8 based) devices. Sets the devices LED notification light if the device has one. RGB Hex format. Example(Blue): \"0000FF\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_msg_type": {
            "description": "Channel: Push Notifications Platform: Huawei Use \"data\" or \"message\" depending on the type of notification you are sending. More details in Data & Background Notifications.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_small_icon": {
            "description": "Channel: Push Notifications Platform: Huawei Icon shown in the status bar and on the top left of the notification. Use an Android resource path (E.g. /drawable/small_icon). Defaults to your app icon if not set.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_sound": {
            "description": "Channel: Push Notifications Platform: Huawei &#9888;&#65039;Deprecated, this field ONLY works on EMUI 5 (Android 7 based) and older devices. Please also set Notification Categories / Channels noted above to support EMUI 8 (Android 8 based) devices. Sound file that is included in your app to play instead of the default device notification sound. NOTE: Leave off file extension for and include the full path.  Example: \"/res/raw/notification\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "huawei_visibility": {
            "description": "Channel: Push Notifications Platform: Huawei &#9888;&#65039;Deprecated, this field ONLY works on EMUI 5 (Android 7 based) and older devices. Please also set Notification Categories / Channels noted above to support EMUI 8 (Android 8 based) devices. 1 = Public (default) (Shows the full message on the lock screen unless the user has disabled all notifications from showing on the lock screen. Please consider the user and mark private if the contents are.) 0 = Private (Hides message contents on lock screen if the user set \"Hide sensitive notification content\" in the system settings) -1 = Secret (Notification does not show on the lock screen at all)",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "include_aliases": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "PlayerNotificationTargetIncludeAliasesInput",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "include_amazon_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Amazon ADM registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: amzn1.adm-registration.v1.XpvSSUk0Rc3hTVVV... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_android_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Android device registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_chrome_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Chrome App registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_chrome_web_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Chrome Web Push registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_email_tokens": {
            "description": "Recommended for Sending Emails - Target specific email addresses. If an email does not correspond to an existing user, a new user will be created. Example: nick@catfac.ts Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_external_user_ids": {
            "description": "Target specific devices by custom user IDs assigned via API. Not compatible with any other targeting parameters Example: [\"custom-id-assigned-by-api\"] REQUIRED: REST API Key Authentication Limit of 2,000 entries per REST API call. Note: If targeting push, email, or sms subscribers with same ids, use with channel_for_external_user_ids to indicate you are sending a push or email or sms.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_ios_tokens": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using iOS device tokens. Warning: Only works with Production tokens. All non-alphanumeric characters must be removed from each token. If a token does not correspond to an existing user, a new user will be created. Example: ce777617da7f548fe7a9ab6febb56cf39fba6d38203... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_phone_numbers": {
            "description": "Recommended for Sending SMS - Target specific phone numbers. The phone number should be in the E.164 format. Phone number should be an existing subscriber on OneSignal. Refer our docs to learn how to add phone numbers to OneSignal. Example phone number: +1999999999 Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_player_ids": {
            "description": "Specific playerids to send your notification to. _Does not require API Auth Key. Do not combine with other targeting parameters. Not compatible with any other targeting parameters. Example: [\"1dd608f2-c6a1-11e3-851d-000c2940e62c\"] Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_unsubscribed": {
            "description": "Channel: Email Default is `false`. This field is used to send transactional notifications. If set to `true`, this notification will also be sent to unsubscribed emails. If a `template_id` is provided, the `include_unsubscribed` value from the template will be inherited. If you are using a third-party ESP, this field requires the ESP's list of unsubscribed emails to be cleared.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "include_wp_wns_uris": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Windows URIs. If a token does not correspond to an existing user, a new user will be created. Example: http://s.notify.live.net/u/1/bn1/HmQAAACPaLDr-... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "included_segments": {
            "description": "The segment names you want to target. Users in these segments will receive a notification. This targeting parameter is only compatible with excluded_segments. Example: [\"Active Users\", \"Inactive Users\"]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "ios_attachments": {
            "description": "Channel: Push Notifications Platform: iOS 10+ Adds media attachments to notifications. Set as JSON object, key as a media id of your choice and the value as a valid local filename or URL. User must press and hold on the notification to view. Do not set mutable_content to download attachments. The OneSignal SDK does this automatically Example: {\"id1\": \"https://domain.com/image.jpg\"}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "ios_badgeCount": {
            "description": "Channel: Push Notifications Platform: iOS Used with ios_badgeType, describes the value to set or amount to increase/decrease your app's iOS badge count by. You can use a negative number to decrease the badge count when used with an ios_badgeType of Increase.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "ios_badgeType": {
            "description": "Channel: Push Notifications Platform: iOS Describes whether to set or increase/decrease your app's iOS badge count by the ios_badgeCount specified count. Can specify None, SetTo, or Increase. `None` leaves the count unaffected. `SetTo` directly sets the badge count to the number specified in ios_badgeCount. `Increase` adds the number specified in ios_badgeCount to the total. Use a negative number to decrease the badge count.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ios_category": {
            "description": "Channel: Push Notifications Platform: iOS Category APS payload, use with registerUserNotificationSettings:categories in your Objective-C / Swift code. Example: calendar category which contains actions like accept and decline iOS 10+ This will trigger your UNNotificationContentExtension whose ID matches this category.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ios_sound": {
            "description": "Channel: Push Notifications Platform: iOS Sound file that is included in your app to play instead of the default device notification sound. Pass nil to disable vibration and sound for the notification. Example: \"notification.wav\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "isAdm": {
            "description": "Indicates whether to send to all devices registered under your app's Amazon Fire platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isAndroid": {
            "description": "Indicates whether to send to all devices registered under your app's Google Android platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isAnyWeb": {
            "description": "Indicates whether to send to all subscribed web browser users, including Chrome, Firefox, and Safari. You may use this instead as a combined flag instead of separately enabling isChromeWeb, isFirefox, and isSafari, though the three options are equivalent to this one.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isChrome": {
            "description": "This flag is not used for web push Please see isChromeWeb for sending to web push users. This flag only applies to Google Chrome Apps & Extensions. Indicates whether to send to all devices registered under your app's Google Chrome Apps & Extension platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isChromeWeb": {
            "description": "Indicates whether to send to all Google Chrome, Chrome on Android, and Mozilla Firefox users registered under your Chrome & Firefox web push platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isFirefox": {
            "description": "Indicates whether to send to all Mozilla Firefox desktop users registered under your Firefox web push platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isHuawei": {
            "description": "Indicates whether to send to all devices registered under your app's Huawei Android platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isIos": {
            "description": "Indicates whether to send to all devices registered under your app's Apple iOS platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isSafari": {
            "description": "Does not support iOS Safari. Indicates whether to send to all Apple's Safari desktop users registered under your Safari web push platform. Read more iOS Safari",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "isWP_WNS": {
            "description": "Indicates whether to send to all devices registered under your app's Windows platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "large_icon": {
            "description": "Channel: Push Notifications Platform: Android Can be a drawable resource name or a URL. See: How to create large icons",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "mutable_content": {
            "description": "Channel: Push Notifications Platform: iOS 10+ Always defaults to true and cannot be turned off. Allows tracking of notification receives and changing of the notification content in your app before it is displayed. Triggers didReceive(_:withContentHandler:) on your UNNotificationServiceExtension.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "name": {
            "description": "Required for SMS Messages. An identifier for tracking message within the OneSignal dashboard or export analytics. Not shown to end user.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "priority": {
            "description": "Channel: Push Notifications Platform: Android, Chrome, ChromeWeb Delivery priority through the push server (example GCM/FCM). Pass 10 for high priority or any other integer for normal priority. Defaults to normal priority for Android and high for iOS. For Android 6.0+ devices setting priority to high will wake the device out of doze mode.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "send_after": {
            "description": "Channel: All Schedule notification for future delivery. API defaults to UTC -1100 Examples: All examples are the exact same date & time. \"Thu Sep 24 2015 14:00:00 GMT-0700 (PDT)\" \"September 24th 2015, 2:00:00 pm UTC-07:00\" \"2015-09-24 14:00:00 GMT-0700\" \"Sept 24 2015 14:00:00 GMT-0700\" \"Thu Sep 24 2015 14:00:00 GMT-0700 (Pacific Daylight Time)\" Note: SMS currently only supports send_after parameter.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "TimestampTZ",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "date-time"
            }
          },
          "small_icon": {
            "description": "Channel: Push Notifications Platform: Android Icon shown in the status bar and on the top left of the notification. If not set a bell icon will be used or ic_stat_onesignal_default if you have set this resource name. See: How to create small icons",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sms_from": {
            "description": "Channel: SMS Phone Number used to send SMS. Should be a registered Twilio phone number in E.164 format.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sms_media_urls": {
            "description": "Channel: SMS URLs for the media files to be attached to the SMS content. Limit: 10 media urls with a total max. size of 5MBs.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "subtitle": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMapInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "summary_arg": {
            "description": "Channel: Push Notifications Platform: iOS 12+ When using thread_id to create grouped notifications in iOS 12+, you can also control the summary. For example, a grouped notification can say \"12 more notifications from John Doe\". The summary_arg lets you set the name of the person/thing the notifications are coming from, and will show up as \"X more notifications from summary_arg\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "summary_arg_count": {
            "description": "Channel: Push Notifications Platform: iOS 12+ When using thread_id, you can also control the count of the number of notifications in the group. For example, if the group already has 12 notifications, and you send a new notification with summary_arg_count = 2, the new total will be 14 and the summary will be \"14 more notifications from summary_arg\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "target_channel": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PlayerNotificationTargetTargetChannel",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "target_content_identifier": {
            "description": "Channel: Push Notifications Platform: iOS 13+ Use to target a specific experience in your App Clip, or to target your notification to a specific window in a multi-scene App.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "template_id": {
            "description": "Channel: Push Notifications Platform: All Use a template you setup on our dashboard. The template_id is the UUID found in the URL when viewing a template on our dashboard. Example: be4a8044-bbd6-11e4-a581-000c2940e62c",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "thread_id": {
            "description": "Channel: Push Notifications Platform: iOS 12+ This parameter is supported in iOS 12 and above. It allows you to group related notifications together. If two notifications have the same thread-id, they will both be added to the same group.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "throttle_rate_per_minute": {
            "description": "Channel: All Apps with throttling enabled:   - the parameter value will be used to override the default application throttling value set from the dashboard settings.   - parameter value 0 indicates not to apply throttling to the notification.   - if the parameter is not passed then the default app throttling value will be applied to the notification. Apps with throttling disabled:   - this parameter can be used to throttle delivery for the notification even though throttling is not enabled at the application level. Refer to throttling for more details.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ttl": {
            "description": "Channel: Push Notifications Platform: iOS, Android, Chrome, Firefox, Safari, ChromeWeb Time To Live - In seconds. The notification will be expired if the device does not come back online within this time. The default is 259,200 seconds (3 days). Max value to set is 2419200 seconds (28 days).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "url": {
            "description": "Channel: Push Notifications Platform: All The URL to open in the browser when a user clicks on the notification. Note: iOS needs https or updated NSAppTransportSecurity in plist This field supports inline substitutions. Omit if including web_url or app_url Example: https://onesignal.com",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_buttons": {
            "description": "Channel: Push Notifications Platform: Chrome 48+ Add action buttons to the notification. The id field is required. Example: [{\"id\": \"like-button\", \"text\": \"Like\", \"icon\": \"http://i.imgur.com/N8SN8ZS.png\", \"url\": \"https://yoursite.com\"}, {\"id\": \"read-more-button\", \"text\": \"Read more\", \"icon\": \"http://i.imgur.com/MIxJp1L.png\", \"url\": \"https://yoursite.com\"}]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "ButtonInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "web_push_topic": {
            "description": "Channel: Push Notifications Platform: All Browsers Display multiple notifications at once with different topics.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_url": {
            "description": "Channel: Push Notifications Platform: All Browsers Same as url but only sent to web push platforms. Including Chrome, Firefox, Safari, Opera, etc. Example: https://onesignal.com",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "wp_wns_sound": {
            "description": "Channel: Push Notifications Platform: Windows Sound file that is included in your app to play instead of the default device notification sound. Example: \"notification.wav\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "NotificationSlice": {
        "fields": {
          "limit": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "notifications": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "NotificationWithMeta",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "NotificationWithMeta"
                }
              }
            }
          },
          "offset": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "total_count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "NotificationWithMeta": {
        "fields": {
          "aggregation": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "BasicNotification1Aggregation",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "chrome_web_icon": {
            "description": "Channel: Push Notifications Platform: Chrome Sets the web push notification's icon. An image URL linking to a valid image. Common image types are supported; GIF will not animate. We recommend 256x256 (at least 80x80) to display well on high DPI devices. Firefox will also use this icon, unless you specify firefox_icon.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "completed_at": {
            "description": "Unix timestamp indicating when notification delivery completed. The delivery duration from start to finish can be calculated with completed_at - send_after.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "contents": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMap",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "converted": {
            "description": "Number of messages that were clicked.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "errored": {
            "description": "Number of errors reported.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "excluded_segments": {
            "description": "Segment that will be excluded when sending. Users in these segments will not receive a notification, even if they were included in included_segments. This targeting parameter is only compatible with included_segments. Example: [\"Active Users\", \"Inactive Users\"]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "external_id": {
            "description": "Correlation and idempotency key. A request received with this parameter will first look for another notification with the same external_id. If one exists, a notification will not be sent, and result of the previous operation will instead be returned. Therefore, if you plan on using this feature, it's important to use a good source of randomness to generate the UUID passed here. This key is only idempotent for 30 days. After 30 days, the notification could be removed from our system and a notification with the same external_id will be sent again.   See Idempotent Notification Requests for more details writeOnly: true",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "failed": {
            "description": "Number of messages sent to unsubscribed devices.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "filters": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "Filter",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "headings": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMap",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "include_aliases": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "PlayerNotificationTargetIncludeAliases",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "include_amazon_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Amazon ADM registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: amzn1.adm-registration.v1.XpvSSUk0Rc3hTVVV... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_android_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Android device registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_chrome_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Chrome App registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_chrome_web_reg_ids": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Chrome Web Push registration IDs. If a token does not correspond to an existing user, a new user will be created. Example: APA91bEeiUeSukAAUdnw3O2RB45FWlSpgJ7Ji_... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_email_tokens": {
            "description": "Recommended for Sending Emails - Target specific email addresses. If an email does not correspond to an existing user, a new user will be created. Example: nick@catfac.ts Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_external_user_ids": {
            "description": "Target specific devices by custom user IDs assigned via API. Not compatible with any other targeting parameters Example: [\"custom-id-assigned-by-api\"] REQUIRED: REST API Key Authentication Limit of 2,000 entries per REST API call. Note: If targeting push, email, or sms subscribers with same ids, use with channel_for_external_user_ids to indicate you are sending a push or email or sms.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_ios_tokens": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using iOS device tokens. Warning: Only works with Production tokens. All non-alphanumeric characters must be removed from each token. If a token does not correspond to an existing user, a new user will be created. Example: ce777617da7f548fe7a9ab6febb56cf39fba6d38203... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_phone_numbers": {
            "description": "Recommended for Sending SMS - Target specific phone numbers. The phone number should be in the E.164 format. Phone number should be an existing subscriber on OneSignal. Refer our docs to learn how to add phone numbers to OneSignal. Example phone number: +1999999999 Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_player_ids": {
            "description": "Specific playerids to send your notification to. _Does not require API Auth Key. Do not combine with other targeting parameters. Not compatible with any other targeting parameters. Example: [\"1dd608f2-c6a1-11e3-851d-000c2940e62c\"] Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "include_wp_wns_uris": {
            "description": "Not Recommended: Please consider using include_player_ids or include_external_user_ids instead. Target using Windows URIs. If a token does not correspond to an existing user, a new user will be created. Example: http://s.notify.live.net/u/1/bn1/HmQAAACPaLDr-... Limit of 2,000 entries per REST API call",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "included_segments": {
            "description": "The segment names you want to target. Users in these segments will receive a notification. This targeting parameter is only compatible with excluded_segments. Example: [\"Active Users\", \"Inactive Users\"]",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "outcomes": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "OutcomeData",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "platform_delivery_stats": {
            "description": "Hash of delivery statistics broken out by target device platform.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PlatformDeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "queued_at": {
            "description": "Unix timestamp indicating when the notification was created.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "received": {
            "description": "Number of devices that received the message.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "remaining": {
            "description": "Number of notifications that have not been sent out yet. This can mean either our system is still processing the notification or you have delayed options set.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "send_after": {
            "description": "Unix timestamp indicating when notification delivery should begin.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "subtitle": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "StringMap",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "successful": {
            "description": "Number of messages delivered to push servers, mobile carriers, or email service providers.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "target_channel": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PlayerNotificationTargetTargetChannel",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "throttle_rate_per_minute": {
            "description": "number of push notifications sent per minute. Paid Feature Only. If throttling is not enabled for the app or the notification, and for free accounts, null is returned. Refer to Throttling for more details.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "value": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "web_push_topic": {
            "description": "Channel: Push Notifications Platform: All Browsers Display multiple notifications at once with different topics.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "OutcomeData": {
        "fields": {
          "aggregation": {
            "type": {
              "name": "OutcomeDataAggregation",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "value": {
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "OutcomesData": {
        "fields": {
          "outcomes": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "OutcomeData",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ]
              }
            }
          }
        }
      },
      "PlatformDeliveryData": {
        "description": "Hash of delivery statistics broken out by target device platform.",
        "fields": {
          "android": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "chrome_web_push": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "edge_web_push": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "email": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "firefox_web_push": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "ios": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "safari_web_push": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "sms": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "DeliveryData",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "Player": {
        "fields": {
          "ad_id": {
            "description": "The ad id for the device's platform: Android = Advertising Id iOS = identifierForVendor WP8.0 = DeviceUniqueId WP8.1 = AdvertisingId",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "amount_spent": {
            "description": "Amount the user has spent in USD, up to two decimal places",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "app_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "badge_count": {
            "description": "Current iOS badge count displayed on the app icon NOTE: Not supported for apps created after June 2018, since badge count for apps created after this date are handled on the client.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "country": {
            "description": "Country code in the ISO 3166-1 Alpha 2 format",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "created_at": {
            "description": "Unixtime when the player joined the game",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "device_model": {
            "description": "Device make and model. Example: iPhone5,1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_os": {
            "description": "Device operating system version. Example: 7.0.4",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_type": {
            "description": "Required The device's platform:   0 = iOS   1 = Android   2 = Amazon   3 = WindowsPhone (MPNS)   4 = Chrome Apps / Extensions   5 = Chrome Web Push   6 = Windows (WNS)   7 = Safari   8 = Firefox   9 = MacOS   10 = Alexa   11 = Email   13 = For Huawei App Gallery Builds SDK Setup. Not for Huawei Devices using FCM   14 = SMS",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "email_auth_hash": {
            "description": "Email - Only required if you have enabled Identity Verification and device_type is email (11).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "external_user_id": {
            "description": "a custom user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "external_user_id_auth_hash": {
            "description": "Only required if you have enabled Identity Verification and device_type is NOT 11 email.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "game_version": {
            "description": "Version of your app. Example: 1.1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "description": "The device's OneSignal ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "identifier": {
            "description": "Recommended: For Push Notifications, this is the Push Token Identifier from Google or Apple. For Apple Push identifiers, you must strip all non alphanumeric characters. Examples: iOS: 7abcd558f29d0b1f048083e2834ad8ea4b3d87d8ad9c088b33c132706ff445f0 Android: APA91bHbYHk7aq-Uam_2pyJ2qbZvqllyyh2wjfPRaw5gLEX2SUlQBRvOc6sck1sa7H7nGeLNlDco8lXj83HWWwzV... For Email Addresses, set the full email address email@email.com and make sure to set device_type to 11.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "invalid_identifier": {
            "description": "If true, this is the equivalent of a user being Unsubscribed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "language": {
            "description": "Language code. Typically lower case two letters, except for Chinese where it must be one of zh-Hans or zh-Hant. Example: en",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "last_active": {
            "description": "Unixtime when the player was last active",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "lat": {
            "description": "Latitude of the device, used for geotagging to segment on.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "long": {
            "description": "Longitude of the device, used for geotagging to segment on.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "notification_types": {
            "description": "1 = subscribed -2 = unsubscribed iOS - These values are set each time the user opens the app from the SDK. Use the SDK function set Subscription instead. Android - You may set this but you can no longer use the SDK method setSubscription later in your app as it will create synchronization issues.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "playtime": {
            "description": "Seconds player was running your app.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "sdk": {
            "description": "Name and version of the sdk/plugin that's calling this API method (if any)",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "session_count": {
            "description": "Number of times the user has played the game, defaults to 1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "tags": {
            "description": "Custom tags for the player. Only support string and integer key value pairs. Does not support arrays or other nested objects. Setting a tag value to null or an empty string will remove the tag. Example: {\"foo\":\"bar\",\"this\":\"that\"} Limitations: - 100 tags per call - Android SDK users: tags cannot be removed or changed via API if set through SDK sendTag methods. Recommended to only tag devices with 1 kilobyte of data Please consider using your own Database to save more than 1 kilobyte of data. See: Internal Database & CRM",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "test_type": {
            "description": "This is used in deciding whether to use your iOS Sandbox or Production push certificate when sending a push when both have been uploaded. Set to the iOS provisioning profile that was used to build your app. 1 = Development 2 = Ad-Hoc Omit this field for App Store builds.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "timezone": {
            "description": "Number of seconds away from UTC. Example: -28800",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "PlayerInput": {
        "fields": {
          "ad_id": {
            "description": "The ad id for the device's platform: Android = Advertising Id iOS = identifierForVendor WP8.0 = DeviceUniqueId WP8.1 = AdvertisingId",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "amount_spent": {
            "description": "Amount the user has spent in USD, up to two decimal places",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "app_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "badge_count": {
            "description": "Current iOS badge count displayed on the app icon NOTE: Not supported for apps created after June 2018, since badge count for apps created after this date are handled on the client.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "country": {
            "description": "Country code in the ISO 3166-1 Alpha 2 format",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "created_at": {
            "description": "Unixtime when the player joined the game",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "device_model": {
            "description": "Device make and model. Example: iPhone5,1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_os": {
            "description": "Device operating system version. Example: 7.0.4",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_type": {
            "description": "Required The device's platform:   0 = iOS   1 = Android   2 = Amazon   3 = WindowsPhone (MPNS)   4 = Chrome Apps / Extensions   5 = Chrome Web Push   6 = Windows (WNS)   7 = Safari   8 = Firefox   9 = MacOS   10 = Alexa   11 = Email   13 = For Huawei App Gallery Builds SDK Setup. Not for Huawei Devices using FCM   14 = SMS",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "email_auth_hash": {
            "description": "Email - Only required if you have enabled Identity Verification and device_type is email (11).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "external_user_id": {
            "description": "a custom user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "external_user_id_auth_hash": {
            "description": "Only required if you have enabled Identity Verification and device_type is NOT 11 email.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "game_version": {
            "description": "Version of your app. Example: 1.1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "identifier": {
            "description": "Recommended: For Push Notifications, this is the Push Token Identifier from Google or Apple. For Apple Push identifiers, you must strip all non alphanumeric characters. Examples: iOS: 7abcd558f29d0b1f048083e2834ad8ea4b3d87d8ad9c088b33c132706ff445f0 Android: APA91bHbYHk7aq-Uam_2pyJ2qbZvqllyyh2wjfPRaw5gLEX2SUlQBRvOc6sck1sa7H7nGeLNlDco8lXj83HWWwzV... For Email Addresses, set the full email address email@email.com and make sure to set device_type to 11.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "language": {
            "description": "Language code. Typically lower case two letters, except for Chinese where it must be one of zh-Hans or zh-Hant. Example: en",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "last_active": {
            "description": "Unixtime when the player was last active",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "lat": {
            "description": "Latitude of the device, used for geotagging to segment on.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "long": {
            "description": "Longitude of the device, used for geotagging to segment on.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "notification_types": {
            "description": "1 = subscribed -2 = unsubscribed iOS - These values are set each time the user opens the app from the SDK. Use the SDK function set Subscription instead. Android - You may set this but you can no longer use the SDK method setSubscription later in your app as it will create synchronization issues.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "playtime": {
            "description": "Seconds player was running your app.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "sdk": {
            "description": "Name and version of the sdk/plugin that's calling this API method (if any)",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "session_count": {
            "description": "Number of times the user has played the game, defaults to 1",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "tags": {
            "description": "Custom tags for the player. Only support string and integer key value pairs. Does not support arrays or other nested objects. Setting a tag value to null or an empty string will remove the tag. Example: {\"foo\":\"bar\",\"this\":\"that\"} Limitations: - 100 tags per call - Android SDK users: tags cannot be removed or changed via API if set through SDK sendTag methods. Recommended to only tag devices with 1 kilobyte of data Please consider using your own Database to save more than 1 kilobyte of data. See: Internal Database & CRM",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "type": "nullable",
                "underlying_type": {
                  "name": "JSON",
                  "type": "named"
                }
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "test_type": {
            "description": "This is used in deciding whether to use your iOS Sandbox or Production push certificate when sending a push when both have been uploaded. Set to the iOS provisioning profile that was used to build your app. 1 = Development 2 = Ad-Hoc Omit this field for App Store builds.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "timezone": {
            "description": "Number of seconds away from UTC. Example: -28800",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "PlayerNotificationTargetIncludeAliases": {
        "fields": {
          "alias_label": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        }
      },
      "PlayerNotificationTargetIncludeAliasesInput": {
        "fields": {
          "alias_label": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "String",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "string"
                ]
              }
            }
          }
        }
      },
      "PlayerSlice": {
        "fields": {
          "limit": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "offset": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          },
          "players": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "Player",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Player"
                }
              }
            }
          },
          "total_count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ]
            }
          }
        }
      },
      "PropertiesDeltasInput": {
        "fields": {
          "purchases": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "PurchaseInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Purchase"
                }
              }
            }
          },
          "session_count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "session_time": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          }
        }
      },
      "PropertiesObject": {
        "fields": {
          "amount_spent": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "country": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "first_active": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "ip": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "language": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "last_active": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "lat": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "long": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "purchases": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "Purchase",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Purchase"
                }
              }
            }
          },
          "tags": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "timezone_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "PropertiesObjectInput": {
        "fields": {
          "amount_spent": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "country": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "first_active": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "ip": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "language": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "last_active": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "lat": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "long": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "purchases": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "PurchaseInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Purchase"
                }
              }
            }
          },
          "tags": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "timezone_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "Purchase": {
        "fields": {
          "amount": {
            "description": "The amount, in USD, spent purchasing the item.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "iso": {
            "description": "The 3-letter ISO 4217 currency code. Required for correct storage and conversion of amount.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sku": {
            "description": "The unique identifier of the purchased item.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "PurchaseInput": {
        "fields": {
          "amount": {
            "description": "The amount, in USD, spent purchasing the item.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "iso": {
            "description": "The 3-letter ISO 4217 currency code. Required for correct storage and conversion of amount.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sku": {
            "description": "The unique identifier of the purchased item.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "SegmentInput": {
        "fields": {
          "filters": {
            "description": "Filter or operators the segment will have.  For a list of available filters with details, please see Send to Users Based on Filters.",
            "type": {
              "element_type": {
                "name": "FilterExpressionsInput",
                "type": "named"
              },
              "type": "array"
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "FilterExpressions"
                }
              }
            }
          },
          "id": {
            "description": "UUID of the segment.  If left empty, it will be assigned automaticaly.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "name": {
            "description": "Name of the segment.  You'll see this name on the Web UI.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "StringMap": {
        "fields": {
          "ar": {
            "description": "Text in Arabic.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "bg": {
            "description": "Text in Bulgarian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "bs": {
            "description": "Text in Bosnian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ca": {
            "description": "Text in Catalan.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "cs": {
            "description": "Text in Czech.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "da": {
            "description": "Text in Danish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "de": {
            "description": "Text in German.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "el": {
            "description": "Text in Greek.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "en": {
            "description": "Text in English.  Will be used as a fallback",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "es": {
            "description": "Text in Spanish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "et": {
            "description": "Text in Estonian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fa": {
            "description": "Text in Persian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fi": {
            "description": "Text in Finnish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fr": {
            "description": "Text in French.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "he": {
            "description": "Text in Hebrew.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hi": {
            "description": "Text in Hindi.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hr": {
            "description": "Text in Croatian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hu": {
            "description": "Text in Hungarian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "description": "Text in Indonesian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "it": {
            "description": "Text in Italian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ja": {
            "description": "Text in Japanese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ka": {
            "description": "Text in Georgian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ko": {
            "description": "Text in Korean.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "lt": {
            "description": "Text in Lithuanian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "lv": {
            "description": "Text in Latvian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ms": {
            "description": "Text in Malay.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "nb": {
            "description": "Text in Norwegian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "nl": {
            "description": "Text in Dutch.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pa": {
            "description": "Text in Punjabi.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pl": {
            "description": "Text in Polish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pt": {
            "description": "Text in Portugese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ro": {
            "description": "Text in Romanian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ru": {
            "description": "Text in Russian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sk": {
            "description": "Text in Slovak.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sr": {
            "description": "Text in Serbian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sv": {
            "description": "Text in Swedish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "th": {
            "description": "Text in Thai.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "tr": {
            "description": "Text in Turkish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "uk": {
            "description": "Text in Ukrainian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "vi": {
            "description": "Text in Vietnamese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh": {
            "description": "Alias for zh-Hans.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh-Hans": {
            "description": "Text in Chinese (Simplified).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh-Hant": {
            "description": "Text in Chinese (Traditional).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "StringMapInput": {
        "fields": {
          "ar": {
            "description": "Text in Arabic.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "bg": {
            "description": "Text in Bulgarian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "bs": {
            "description": "Text in Bosnian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ca": {
            "description": "Text in Catalan.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "cs": {
            "description": "Text in Czech.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "da": {
            "description": "Text in Danish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "de": {
            "description": "Text in German.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "el": {
            "description": "Text in Greek.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "en": {
            "description": "Text in English.  Will be used as a fallback",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "es": {
            "description": "Text in Spanish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "et": {
            "description": "Text in Estonian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fa": {
            "description": "Text in Persian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fi": {
            "description": "Text in Finnish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "fr": {
            "description": "Text in French.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "he": {
            "description": "Text in Hebrew.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hi": {
            "description": "Text in Hindi.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hr": {
            "description": "Text in Croatian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "hu": {
            "description": "Text in Hungarian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "description": "Text in Indonesian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "it": {
            "description": "Text in Italian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ja": {
            "description": "Text in Japanese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ka": {
            "description": "Text in Georgian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ko": {
            "description": "Text in Korean.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "lt": {
            "description": "Text in Lithuanian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "lv": {
            "description": "Text in Latvian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ms": {
            "description": "Text in Malay.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "nb": {
            "description": "Text in Norwegian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "nl": {
            "description": "Text in Dutch.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pa": {
            "description": "Text in Punjabi.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pl": {
            "description": "Text in Polish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "pt": {
            "description": "Text in Portugese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ro": {
            "description": "Text in Romanian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "ru": {
            "description": "Text in Russian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sk": {
            "description": "Text in Slovak.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sr": {
            "description": "Text in Serbian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "sv": {
            "description": "Text in Swedish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "th": {
            "description": "Text in Thai.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "tr": {
            "description": "Text in Turkish.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "uk": {
            "description": "Text in Ukrainian.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "vi": {
            "description": "Text in Vietnamese.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh": {
            "description": "Alias for zh-Hans.",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh-Hans": {
            "description": "Text in Chinese (Simplified).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zh-Hant": {
            "description": "Text in Chinese (Traditional).",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "SubscriptionObject": {
        "fields": {
          "app_version": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "carrier": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_model": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_os": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "enabled": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "net_type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "notification_types": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "rooted": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "sdk": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "session_count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "session_time": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "test_type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "token": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SubscriptionObjectType",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_auth": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_p256": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "SubscriptionObjectInput": {
        "fields": {
          "app_version": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "carrier": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_model": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "device_os": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "enabled": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "net_type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "notification_types": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "rooted": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "sdk": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "session_count": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "session_time": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "test_type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "token": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "type": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SubscriptionObjectType",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_auth": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "web_p256": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "TransferSubscriptionDistributedResult": {
        "description": "Distributed responses of transfer_subscriptionDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of transfer_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of transfer_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "TransferSubscriptionDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "TransferSubscriptionDistributedResultData": {
        "description": "Distributed response data of transfer_subscriptionDistributed",
        "fields": {
          "data": {
            "description": "A result of transfer_subscriptionDistributed",
            "type": {
              "name": "UserIdentityResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "TransferSubscriptionRequestBodyInput": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "UpdateAppDistributedResult": {
        "description": "Distributed responses of update_appDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_appDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_appDistributed",
            "type": {
              "element_type": {
                "name": "UpdateAppDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdateAppDistributedResultData": {
        "description": "Distributed response data of update_appDistributed",
        "fields": {
          "data": {
            "description": "A result of update_appDistributed",
            "type": {
              "name": "App",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdateLiveActivityDistributedResult": {
        "description": "Distributed responses of update_live_activityDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_live_activityDistributed",
            "type": {
              "element_type": {
                "name": "UpdateLiveActivityDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdateLiveActivityDistributedResultData": {
        "description": "Distributed response data of update_live_activityDistributed",
        "fields": {
          "data": {
            "description": "A result of update_live_activityDistributed",
            "type": {
              "name": "UpdateLiveActivitySuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdateLiveActivityRequestInput": {
        "fields": {
          "dismiss_at": {
            "description": "Timestamp; only allowed if event is \"end\"",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Float64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "number"
              ]
            }
          },
          "event": {
            "type": {
              "name": "UpdateLiveActivityRequestEvent",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "event_updates": {
            "type": {
              "name": "JSON",
              "type": "named"
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "name": {
            "description": "Type of live activity",
            "type": {
              "name": "UpdateLiveActivityRequestName",
              "type": "named"
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "UpdateLiveActivitySuccessResponse": {
        "fields": {
          "errors": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Notification200Errors",
                "type": "named"
              }
            },
            "http": {
              "xml": {
                "name": "Notification200Errors"
              }
            }
          },
          "notification_id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        }
      },
      "UpdatePlayerDistributedResult": {
        "description": "Distributed responses of update_playerDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_playerDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_playerDistributed",
            "type": {
              "element_type": {
                "name": "UpdatePlayerDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdatePlayerDistributedResultData": {
        "description": "Distributed response data of update_playerDistributed",
        "fields": {
          "data": {
            "description": "A result of update_playerDistributed",
            "type": {
              "name": "UpdatePlayerSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdatePlayerSuccessResponse": {
        "fields": {
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "UpdatePlayerTagsBodyInput": {
        "fields": {
          "tags": {
            "description": "Custom tags for the device record.  Only support string key value pairs.  Does not support arrays or other nested objects.  Example `{\"foo\":\"bar\",\"this\":\"that\"}`. Limitations: - 100 tags per call - Android SDK users: tags cannot be removed or changed via API if set through SDK sendTag methods. Recommended to only tag devices with 1 kilobyte of ata Please consider using your own Database to save more than 1 kilobyte of data.  See: Internal Database & CRM",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          }
        }
      },
      "UpdatePlayerTagsDistributedResult": {
        "description": "Distributed responses of update_player_tagsDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_player_tagsDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_player_tagsDistributed",
            "type": {
              "element_type": {
                "name": "UpdatePlayerTagsDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdatePlayerTagsDistributedResultData": {
        "description": "Distributed response data of update_player_tagsDistributed",
        "fields": {
          "data": {
            "description": "A result of update_player_tagsDistributed",
            "type": {
              "name": "UpdatePlayerTagsSuccessResponse",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdatePlayerTagsSuccessResponse": {
        "fields": {
          "success": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "UpdateSubscriptionDistributedResult": {
        "description": "Distributed responses of update_subscriptionDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_subscriptionDistributed",
            "type": {
              "element_type": {
                "name": "UpdateSubscriptionDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdateSubscriptionDistributedResultData": {
        "description": "Distributed response data of update_subscriptionDistributed",
        "fields": {
          "data": {
            "description": "A result of update_subscriptionDistributed",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdateSubscriptionRequestBodyInput": {
        "fields": {
          "subscription": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SubscriptionObjectInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "SubscriptionObject"
              }
            }
          }
        }
      },
      "UpdateUserDistributedResult": {
        "description": "Distributed responses of update_userDistributed",
        "fields": {
          "errors": {
            "description": "Error responses of update_userDistributed",
            "type": {
              "element_type": {
                "name": "DistributedError",
                "type": "named"
              },
              "type": "array"
            }
          },
          "results": {
            "description": "Results of update_userDistributed",
            "type": {
              "element_type": {
                "name": "UpdateUserDistributedResultData",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "UpdateUserDistributedResultData": {
        "description": "Distributed response data of update_userDistributed",
        "fields": {
          "data": {
            "description": "A result of update_userDistributed",
            "type": {
              "name": "UpdateUserResult",
              "type": "named"
            }
          },
          "server": {
            "description": "Identity of the remote server",
            "type": {
              "name": "HttpServerId",
              "type": "named"
            }
          }
        }
      },
      "UpdateUserRequestInput": {
        "fields": {
          "deltas": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PropertiesDeltasInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PropertiesDeltas"
              }
            }
          },
          "properties": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PropertiesObjectInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PropertiesObject"
              }
            }
          },
          "refresh_device_metadata": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "UpdateUserResult": {
        "fields": {
          "properties": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PropertiesObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PropertiesObject"
              }
            }
          }
        }
      },
      "User": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          },
          "properties": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PropertiesObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PropertiesObject"
              }
            }
          },
          "subscription_options": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UserSubscriptionOptions",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "subscriptions": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "SubscriptionObject",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "SubscriptionObject"
                }
              }
            }
          }
        }
      },
      "UserIdentityRequestBodyInput": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "UserIdentityResponse": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          }
        }
      },
      "UserInput": {
        "fields": {
          "identity": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "IdentityObject",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "IdentityObject"
              }
            }
          },
          "properties": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "PropertiesObjectInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ],
              "xml": {
                "name": "PropertiesObject"
              }
            }
          },
          "subscription_options": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UserSubscriptionOptionsInput",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "subscriptions": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "element_type": {
                  "name": "SubscriptionObjectInput",
                  "type": "named"
                },
                "type": "array"
              }
            },
            "http": {
              "type": [
                "array"
              ],
              "items": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "SubscriptionObject"
                }
              }
            }
          }
        }
      },
      "UserSubscriptionOptions": {
        "fields": {
          "retain_previous_owner": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      },
      "UserSubscriptionOptionsInput": {
        "fields": {
          "retain_previous_owner": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          }
        }
      }
    },
    "procedures": {
      "begin_live_activity": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/token",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/live_activities/{activity_id}/token",
            "type": {
              "name": "BeginLiveActivityRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "BeginLiveActivityRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Start Live Activity",
        "result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      },
      "begin_live_activityDistributed": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/token",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/live_activities/{activity_id}/token",
            "type": {
              "name": "BeginLiveActivityRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "BeginLiveActivityRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Start Live Activity",
        "result_type": {
          "name": "BeginLiveActivityDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      },
      "cancel_notification": {
        "request": {
          "url": "/notifications/{notification_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Stop a scheduled or currently outgoing notification",
        "result_type": {
          "name": "CancelNotificationSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "CancelNotificationSuccessResponse",
          "type": "named"
        }
      },
      "cancel_notificationDistributed": {
        "request": {
          "url": "/notifications/{notification_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Stop a scheduled or currently outgoing notification",
        "result_type": {
          "name": "CancelNotificationDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CancelNotificationSuccessResponse",
          "type": "named"
        }
      },
      "create_app": {
        "request": {
          "url": "/apps",
          "method": "post",
          "security": [
            {
              "user_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /apps",
            "type": {
              "name": "AppInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "App"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create an app",
        "result_type": {
          "name": "App",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "create_appDistributed": {
        "request": {
          "url": "/apps",
          "method": "post",
          "security": [
            {
              "user_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /apps",
            "type": {
              "name": "AppInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "App"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create an app",
        "result_type": {
          "name": "CreateAppDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "create_notification": {
        "request": {
          "url": "/notifications",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /notifications",
            "type": {
              "name": "NotificationInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Notification"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create notification",
        "result_type": {
          "name": "CreateNotificationSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateNotificationSuccessResponse",
          "type": "named"
        }
      },
      "create_notificationDistributed": {
        "request": {
          "url": "/notifications",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /notifications",
            "type": {
              "name": "NotificationInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Notification"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create notification",
        "result_type": {
          "name": "CreateNotificationDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateNotificationSuccessResponse",
          "type": "named"
        }
      },
      "create_player": {
        "request": {
          "url": "/players",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /players",
            "type": {
              "name": "PlayerInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Player"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Add a device",
        "result_type": {
          "name": "CreatePlayerSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreatePlayerSuccessResponse",
          "type": "named"
        }
      },
      "create_playerDistributed": {
        "request": {
          "url": "/players",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /players",
            "type": {
              "name": "PlayerInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Player"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Add a device",
        "result_type": {
          "name": "CreatePlayerDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreatePlayerSuccessResponse",
          "type": "named"
        }
      },
      "create_segments": {
        "request": {
          "url": "/apps/{app_id}/segments",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/segments",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SegmentInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Segment"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create Segments",
        "result_type": {
          "name": "CreateSegmentSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateSegmentSuccessResponse",
          "type": "named"
        }
      },
      "create_segmentsDistributed": {
        "request": {
          "url": "/apps/{app_id}/segments",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/segments",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "SegmentInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Segment"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Create Segments",
        "result_type": {
          "name": "CreateSegmentsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateSegmentSuccessResponse",
          "type": "named"
        }
      },
      "create_subscription": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/subscriptions",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/users/by/{alias_label}/{alias_id}/subscriptions",
            "type": {
              "name": "CreateSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "CreateSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Creates a new Subscription under the User provided. Useful to add email addresses and SMS numbers to the User.",
        "result_type": {
          "name": "CreateSubscriptionResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateSubscriptionResult",
          "type": "named"
        }
      },
      "create_subscriptionDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/subscriptions",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/users/by/{alias_label}/{alias_id}/subscriptions",
            "type": {
              "name": "CreateSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "CreateSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Creates a new Subscription under the User provided. Useful to add email addresses and SMS numbers to the User.",
        "result_type": {
          "name": "CreateSubscriptionDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "CreateSubscriptionResult",
          "type": "named"
        }
      },
      "create_user": {
        "request": {
          "url": "/apps/{app_id}/users",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/users",
            "type": {
              "name": "UserInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "User"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Creates a User, optionally Subscriptions owned by the User as well as Aliases. Aliases provided in the payload will be used to look up an existing User.",
        "result_type": {
          "name": "User",
          "type": "named"
        },
        "original_result_type": {
          "name": "User",
          "type": "named"
        }
      },
      "create_userDistributed": {
        "request": {
          "url": "/apps/{app_id}/users",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/users",
            "type": {
              "name": "UserInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "User"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Creates a User, optionally Subscriptions owned by the User as well as Aliases. Aliases provided in the payload will be used to look up an existing User.",
        "result_type": {
          "name": "CreateUserDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "User",
          "type": "named"
        }
      },
      "delete_alias": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity/{alias_label_to_delete}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label_to_delete": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label_to_delete",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Deletes an alias by alias label",
        "result_type": {
          "name": "DeleteAliasResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeleteAliasResult",
          "type": "named"
        }
      },
      "delete_aliasDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity/{alias_label_to_delete}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label_to_delete": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label_to_delete",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Deletes an alias by alias label",
        "result_type": {
          "name": "DeleteAliasDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeleteAliasResult",
          "type": "named"
        }
      },
      "delete_player": {
        "request": {
          "url": "/players/{player_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "The OneSignal player_id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Delete a user record",
        "result_type": {
          "name": "DeletePlayerSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeletePlayerSuccessResponse",
          "type": "named"
        }
      },
      "delete_playerDistributed": {
        "request": {
          "url": "/players/{player_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "The OneSignal player_id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Delete a user record",
        "result_type": {
          "name": "DeletePlayerDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeletePlayerSuccessResponse",
          "type": "named"
        }
      },
      "delete_segments": {
        "request": {
          "url": "/apps/{app_id}/segments/{segment_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "segment_id": {
            "description": "The segment_id can be found in the URL of the segment when viewing it in the dashboard.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "segment_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Delete Segments",
        "result_type": {
          "name": "DeleteSegmentSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeleteSegmentSuccessResponse",
          "type": "named"
        }
      },
      "delete_segmentsDistributed": {
        "request": {
          "url": "/apps/{app_id}/segments/{segment_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "segment_id": {
            "description": "The segment_id can be found in the URL of the segment when viewing it in the dashboard.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "segment_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Delete Segments",
        "result_type": {
          "name": "DeleteSegmentsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "DeleteSegmentSuccessResponse",
          "type": "named"
        }
      },
      "delete_subscription": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Deletes the Subscription.",
        "result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "delete_subscriptionDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Deletes the Subscription.",
        "result_type": {
          "name": "DeleteSubscriptionDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "delete_user": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Removes the User identified by (:alias_label, :alias_id), and all Subscriptions and Aliases",
        "result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "delete_userDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Removes the User identified by (:alias_label, :alias_id), and all Subscriptions and Aliases",
        "result_type": {
          "name": "DeleteUserDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "end_live_activity": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/token/{subscription_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "description": "Subscription ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Stop Live Activity",
        "result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      },
      "end_live_activityDistributed": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/token/{subscription_id}",
          "method": "delete",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "description": "Subscription ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Stop Live Activity",
        "result_type": {
          "name": "EndLiveActivityDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "Boolean",
            "type": "named"
          }
        }
      },
      "export_events": {
        "request": {
          "url": "/notifications/{notification_id}/export_events",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The ID of the app that the notification belongs to.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "description": "The ID of the notification to export events from.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Export CSV of Events",
        "result_type": {
          "name": "ExportEventsSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "ExportEventsSuccessResponse",
          "type": "named"
        }
      },
      "export_eventsDistributed": {
        "request": {
          "url": "/notifications/{notification_id}/export_events",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The ID of the app that the notification belongs to.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "description": "The ID of the notification to export events from.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Export CSV of Events",
        "result_type": {
          "name": "ExportEventsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "ExportEventsSuccessResponse",
          "type": "named"
        }
      },
      "export_players": {
        "request": {
          "url": "/players/csv_export",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to export devices from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /players/csv_export?app_id={app_id}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "ExportPlayersBodyInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Export CSV of Players",
        "result_type": {
          "name": "ExportPlayersSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "ExportPlayersSuccessResponse",
          "type": "named"
        }
      },
      "export_playersDistributed": {
        "request": {
          "url": "/players/csv_export",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The app ID that you want to export devices from",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "query",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /players/csv_export?app_id={app_id}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "ExportPlayersBodyInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Export CSV of Players",
        "result_type": {
          "name": "ExportPlayersDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "ExportPlayersSuccessResponse",
          "type": "named"
        }
      },
      "get_notification_history": {
        "request": {
          "url": "/notifications/{notification_id}/history",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /notifications/{notification_id}/history",
            "type": {
              "name": "GetNotificationHistoryBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "description": "The \"id\" of the message found in the Notification object",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Notification History",
        "result_type": {
          "name": "NotificationHistorySuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationHistorySuccessResponse",
          "type": "named"
        }
      },
      "get_notification_historyDistributed": {
        "request": {
          "url": "/notifications/{notification_id}/history",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of POST /notifications/{notification_id}/history",
            "type": {
              "name": "GetNotificationHistoryBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "notification_id": {
            "description": "The \"id\" of the message found in the Notification object",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "notification_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Notification History",
        "result_type": {
          "name": "GetNotificationHistoryDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "NotificationHistorySuccessResponse",
          "type": "named"
        }
      },
      "identify_user_by_alias": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
            "type": {
              "name": "UserIdentityRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UserIdentityRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Upserts one or more Aliases to an existing User identified by (:alias_label, :alias_id).",
        "result_type": {
          "name": "IdentifyUserByAliasResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "IdentifyUserByAliasResult",
          "type": "named"
        }
      },
      "identify_user_by_aliasDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/users/by/{alias_label}/{alias_id}/identity",
            "type": {
              "name": "UserIdentityRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UserIdentityRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Upserts one or more Aliases to an existing User identified by (:alias_label, :alias_id).",
        "result_type": {
          "name": "IdentifyUserByAliasDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "IdentifyUserByAliasResult",
          "type": "named"
        }
      },
      "identify_user_by_subscription_id": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/user/identity",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}/user/identity",
            "type": {
              "name": "UserIdentityRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UserIdentityRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Upserts one or more Aliases for the User identified by :subscription_id.",
        "result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "identify_user_by_subscription_idDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/user/identity",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}/user/identity",
            "type": {
              "name": "UserIdentityRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UserIdentityRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Upserts one or more Aliases for the User identified by :subscription_id.",
        "result_type": {
          "name": "IdentifyUserBySubscriptionIdDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "transfer_subscription": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/owner",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}/owner",
            "type": {
              "name": "TransferSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "TransferSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Transfers this Subscription to the User identified by the identity in the payload.",
        "result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "transfer_subscriptionDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}/owner",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}/owner",
            "type": {
              "name": "TransferSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "TransferSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Transfers this Subscription to the User identified by the identity in the payload.",
        "result_type": {
          "name": "TransferSubscriptionDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UserIdentityResponse",
          "type": "named"
        }
      },
      "update_app": {
        "request": {
          "url": "/apps/{app_id}",
          "method": "put",
          "security": [
            {
              "user_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "An app id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PUT /apps/{app_id}",
            "type": {
              "name": "AppInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "App"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Update an app",
        "result_type": {
          "name": "App",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "update_appDistributed": {
        "request": {
          "url": "/apps/{app_id}",
          "method": "put",
          "security": [
            {
              "user_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "An app id",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PUT /apps/{app_id}",
            "type": {
              "name": "AppInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "App"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Update an app",
        "result_type": {
          "name": "UpdateAppDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "App",
          "type": "named"
        }
      },
      "update_live_activity": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/notifications",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/live_activities/{activity_id}/notifications",
            "type": {
              "name": "UpdateLiveActivityRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateLiveActivityRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Update a Live Activity via Push",
        "result_type": {
          "name": "UpdateLiveActivitySuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdateLiveActivitySuccessResponse",
          "type": "named"
        }
      },
      "update_live_activityDistributed": {
        "request": {
          "url": "/apps/{app_id}/live_activities/{activity_id}/notifications",
          "method": "post",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "activity_id": {
            "description": "Live Activity record ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "activity_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "description": "The OneSignal App ID for your app.  Available in Keys & IDs.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of POST /apps/{app_id}/live_activities/{activity_id}/notifications",
            "type": {
              "name": "UpdateLiveActivityRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateLiveActivityRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Update a Live Activity via Push",
        "result_type": {
          "name": "UpdateLiveActivityDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdateLiveActivitySuccessResponse",
          "type": "named"
        }
      },
      "update_player": {
        "request": {
          "url": "/players/{player_id}",
          "method": "put",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of PUT /players/{player_id}",
            "type": {
              "name": "PlayerInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Player"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "Player's OneSignal ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Edit device",
        "result_type": {
          "name": "UpdatePlayerSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdatePlayerSuccessResponse",
          "type": "named"
        }
      },
      "update_playerDistributed": {
        "request": {
          "url": "/players/{player_id}",
          "method": "put",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Request body of PUT /players/{player_id}",
            "type": {
              "name": "PlayerInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "Player"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "player_id": {
            "description": "Player's OneSignal ID",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "player_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Edit device",
        "result_type": {
          "name": "UpdatePlayerDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdatePlayerSuccessResponse",
          "type": "named"
        }
      },
      "update_player_tags": {
        "request": {
          "url": "/apps/{app_id}/users/{external_user_id}",
          "method": "put",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID the user record is found under.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PUT /apps/{app_id}/users/{external_user_id}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UpdatePlayerTagsBodyInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "external_user_id": {
            "description": "The External User ID mapped to teh device record in OneSignal.  Must be actively set on the device to be updated.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "external_user_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Edit tags with external user id",
        "result_type": {
          "name": "UpdatePlayerTagsSuccessResponse",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdatePlayerTagsSuccessResponse",
          "type": "named"
        }
      },
      "update_player_tagsDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/{external_user_id}",
          "method": "put",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "description": "The OneSignal App ID the user record is found under.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PUT /apps/{app_id}/users/{external_user_id}",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UpdatePlayerTagsBodyInput",
                "type": "named"
              }
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "external_user_id": {
            "description": "The External User ID mapped to teh device record in OneSignal.  Must be actively set on the device to be updated.",
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "external_user_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Edit tags with external user id",
        "result_type": {
          "name": "UpdatePlayerTagsDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdatePlayerTagsSuccessResponse",
          "type": "named"
        }
      },
      "update_subscription": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}",
            "type": {
              "name": "UpdateSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Updates an existing Subscriptions properties.",
        "result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "update_subscriptionDistributed": {
        "request": {
          "url": "/apps/{app_id}/subscriptions/{subscription_id}",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/subscriptions/{subscription_id}",
            "type": {
              "name": "UpdateSubscriptionRequestBodyInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateSubscriptionRequestBody"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          },
          "subscription_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "subscription_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          }
        },
        "description": "Updates an existing Subscriptions properties.",
        "result_type": {
          "name": "UpdateSubscriptionDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "type": "nullable",
          "underlying_type": {
            "name": "JSON",
            "type": "named"
          }
        }
      },
      "update_user": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/users/by/{alias_label}/{alias_id}",
            "type": {
              "name": "UpdateUserRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateUserRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Execution options for HTTP requests to a single server",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpSingleOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Updates an existing Users properties.",
        "result_type": {
          "name": "UpdateUserResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdateUserResult",
          "type": "named"
        }
      },
      "update_userDistributed": {
        "request": {
          "url": "/apps/{app_id}/users/by/{alias_label}/{alias_id}",
          "method": "patch",
          "security": [
            {
              "app_key": []
            }
          ],
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "alias_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "alias_label": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "alias_label",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "app_id": {
            "type": {
              "name": "String",
              "type": "named"
            },
            "http": {
              "name": "app_id",
              "in": "path",
              "schema": {
                "type": [
                  "string"
                ]
              }
            }
          },
          "body": {
            "description": "Request body of PATCH /apps/{app_id}/users/by/{alias_label}/{alias_id}",
            "type": {
              "name": "UpdateUserRequestInput",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ],
                "xml": {
                  "name": "UpdateUserRequest"
                }
              }
            }
          },
          "httpOptions": {
            "description": "Distributed execution options for HTTP requests to multiple servers",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "HttpDistributedOptions",
                "type": "named"
              }
            }
          }
        },
        "description": "Updates an existing Users properties.",
        "result_type": {
          "name": "UpdateUserDistributedResult",
          "type": "named"
        },
        "original_result_type": {
          "name": "UpdateUserResult",
          "type": "named"
        }
      }
    },
    "scalar_types": {
      "AppApnsEnv": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "sandbox",
            "production"
          ],
          "type": "enum"
        }
      },
      "BasicNotification1Aggregation": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "sum",
            "count"
          ],
          "type": "enum"
        }
      },
      "Boolean": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "boolean"
        }
      },
      "FilterRelation": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            ">",
            "<",
            "=",
            "!=",
            "exists",
            "not_exists",
            "time_elapsed_gt",
            "time_elapsed_lt"
          ],
          "type": "enum"
        }
      },
      "Float64": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "float64"
        }
      },
      "GetNotificationHistoryBodyEvents": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "sent",
            "clicked"
          ],
          "type": "enum"
        }
      },
      "HttpServerId": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "app1",
            "app2"
          ],
          "type": "enum"
        }
      },
      "IdentityObject": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "json"
        }
      },
      "Int32": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "int32"
        }
      },
      "Int64": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "int64"
        }
      },
      "JSON": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "json"
        }
      },
      "Notification200Errors": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "json"
        }
      },
      "OperatorOperator": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "OR",
            "AND"
          ],
          "type": "enum"
        }
      },
      "OutcomeDataAggregation": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "sum",
            "count"
          ],
          "type": "enum"
        }
      },
      "PlayerNotificationTargetTargetChannel": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "push",
            "email",
            "sms"
          ],
          "type": "enum"
        }
      },
      "String": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "string"
        }
      },
      "SubscriptionObjectType": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "iOSPush",
            "AndroidPush",
            "FireOSPush",
            "ChromeExtensionPush",
            "ChromePush",
            "WindowsPush",
            "SafariLegacyPush",
            "FirefoxPush",
            "macOSPush",
            "HuaweiPush",
            "SafariPush",
            "Email",
            "SMS"
          ],
          "type": "enum"
        }
      },
      "TimestampTZ": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "timestamptz"
        }
      },
      "UpdateLiveActivityRequestEvent": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "update",
            "end"
          ],
          "type": "enum"
        }
      },
      "UpdateLiveActivityRequestName": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "one_of": [
            "headings",
            "contents",
            "ios_sound",
            "priority_level"
          ],
          "type": "enum"
        }
      }
    }
  }
]
